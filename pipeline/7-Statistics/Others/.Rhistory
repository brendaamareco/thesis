library(readr)
computational_complexity <- read_csv("computational_complexity.csv")
View(computational_complexity)
View(computational_complexity)
View(computational_complexity)
R complexity.R
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
# Create the plot
p <- ggplot(df, aes(country, entropy)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point()
ggsave("plot.png")
print(p)
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)  +
coord_cartesian(xlim = c(min(df$Precision), max(df$Precision),
ylim = c(min(df$Combinaciones), max(df$Combinaciones))))
ggsave("plot.png")
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
f$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
library(ggplot2)
library(data.table)
df <- fread("computational_complexity.csv")
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.numeric(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.numeric(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.numeric(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point()
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.numeric(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point(colour = "grey60") + stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point(colour = "grey60") + stat_smooth(method = lm, se = FALSE, colour = "black")
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point(colour = "grey60") +
stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
df$Combinaciones[df$Combinaciones == max(df$Combinaciones)] <- 1200000000000
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() +
stat_smooth(method = loess)
ggsave("plot.png")
print(p)
library(ggplot2)
df <- fread("computational_complexity.csv")
df$Combinaciones <- as.integer(df$Combinaciones)
# Create the plot
p <- ggplot(df, aes(x = Precision, y = Combinaciones)) +
geom_point() +
stat_smooth(method = loess)
ggsave("plot.png")
print(p)
